{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = App;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _api = _interopRequireDefault(require(\"./services/api\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\nc\\\\Desktop\\\\gostack\\\\desafios gostack\\\\desafio-3\\\\src\\\\App.js\";\n\nfunction App() {\n  var _this = this;\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      repositories = _useState2[0],\n      setRepositorie = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    _api.default.get('repositories').then(function (reponse) {\n      return setRepositorie(reponse.data);\n    });\n\n    console.log(repositories);\n  }, []);\n\n  function handleLikeRepository(id) {\n    return _regenerator.default.async(function handleLikeRepository$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(_api.default.post(\"repositories/\" + id + \"/like\"));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.StatusBar, {\n    barStyle: \"light-content\",\n    backgroundColor: \"#7159c1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.FlatList, {\n    data: repositories,\n    key: function key(repository) {\n      return repository.id;\n    },\n    renderItem: function renderItem(repository) {\n      return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n        style: styles.repositoryContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.repository,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 23\n        }\n      }, repository.title), _react.default.createElement(_reactNative.View, {\n        style: styles.techsContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 23\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.tech,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      }, \"ReactJS\"), _react.default.createElement(_reactNative.Text, {\n        style: styles.tech,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, \"Node.js\")), _react.default.createElement(_reactNative.View, {\n        style: styles.likesContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.likeText,\n        testID: \"like-button-\" + repository.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, repository.likes)), _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return handleLikeRepository(repository.id);\n        },\n        testID: \"like-button-\" + repository.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 23\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, \"Curtir\"))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#7159c1\"\n  },\n  repositoryContainer: {\n    marginBottom: 15,\n    marginHorizontal: 15,\n    backgroundColor: \"#fff\",\n    padding: 20\n  },\n  repository: {\n    fontSize: 32,\n    fontWeight: \"bold\"\n  },\n  techsContainer: {\n    flexDirection: \"row\",\n    marginTop: 10\n  },\n  tech: {\n    fontSize: 12,\n    fontWeight: \"bold\",\n    marginRight: 10,\n    backgroundColor: \"#04d361\",\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    color: \"#fff\"\n  },\n  likesContainer: {\n    marginTop: 15,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  likeText: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n    marginRight: 10\n  },\n  button: {\n    marginTop: 10\n  },\n  buttonText: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n    marginRight: 10,\n    color: \"#fff\",\n    backgroundColor: \"#7159c1\",\n    padding: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/nc/Desktop/gostack/desafios gostack/desafio-3/src/App.js"],"names":["App","repositories","setRepositorie","api","get","then","reponse","data","console","log","handleLikeRepository","id","post","styles","container","repository","repositoryContainer","title","techsContainer","tech","likesContainer","likeText","likes","button","buttonText","StyleSheet","create","flex","backgroundColor","marginBottom","marginHorizontal","padding","fontSize","fontWeight","flexDirection","marginTop","marginRight","paddingHorizontal","paddingVertical","color","justifyContent"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\";\r\n\r\nimport {\r\n  SafeAreaView,\r\n  View,\r\n  FlatList,\r\n  Text,\r\n  StatusBar,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport api from './services/api';\r\n\r\nexport default function App() {\r\n\r\n  const [repositories,setRepositorie ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api.get('repositories').then(reponse => setRepositorie(reponse.data) );\r\n    console.log(repositories);\r\n  },[]);\r\n\r\n  async function handleLikeRepository(id) {\r\n   await api.post(`repositories/${id}/like`);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#7159c1\" />\r\n      <SafeAreaView style={styles.container}>\r\n\r\n        <FlatList\r\n                data={ repositories }\r\n                key={ repository => repository.id }\r\n                renderItem={\r\n                  repository => (\r\n                    <>\r\n                    <View style={styles.repositoryContainer}>\r\n                      <Text style={styles.repository}>{repository.title}</Text>\r\n\r\n                      <View style={styles.techsContainer}>\r\n                        <Text style={styles.tech}>\r\n                          ReactJS\r\n                        </Text>\r\n                        <Text style={styles.tech}>\r\n                          Node.js\r\n                        </Text>\r\n                      </View>\r\n\r\n                      <View style={styles.likesContainer}>\r\n                        <Text\r\n                          style={styles.likeText}\r\n                          // Remember to replace \"1\" below with repository ID: {`repository-likes-${repository.id}`}\r\n                          testID={`like-button-${repository.id}`}\r\n                        >\r\n                         {repository.likes}\r\n                        </Text>\r\n                      </View>\r\n\r\n                      <TouchableOpacity\r\n                        style={styles.button}\r\n                        onPress={() => handleLikeRepository(repository.id)}\r\n                        // Remember to replace \"1\" below with repository ID: {`like-button-${repository.id}`}\r\n                        testID={`like-button-${repository.id}`}\r\n                      >\r\n                        <Text style={styles.buttonText}>Curtir</Text>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                    </>\r\n                  )}\r\n          />\r\n      </SafeAreaView>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#7159c1\",\r\n  },\r\n  repositoryContainer: {\r\n    marginBottom: 15,\r\n    marginHorizontal: 15,\r\n    backgroundColor: \"#fff\",\r\n    padding: 20,\r\n  },\r\n  repository: {\r\n    fontSize: 32,\r\n    fontWeight: \"bold\",\r\n  },\r\n  techsContainer: {\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n  },\r\n  tech: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n    marginRight: 10,\r\n    backgroundColor: \"#04d361\",\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 5,\r\n    color: \"#fff\",\r\n  },\r\n  likesContainer: {\r\n    marginTop: 15,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  likeText: {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n    marginRight: 10,\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n  },\r\n  buttonText: {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n    marginRight: 10,\r\n    color: \"#fff\",\r\n    backgroundColor: \"#7159c1\",\r\n    padding: 15,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}